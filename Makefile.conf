# SRC_ROOT is a path within the working copy that contains the files to be
# installed. Overwrite it to provide a different path.
#SRC_ROOT = $(CURDIR)/$(shell hostname)

# DST_ROOT is a path elsewhere on the system to which the files are installed.
# Overwrite it to install someplace fancy.
#DST_ROOT = $(HOME)/.special-env

# Uncomment this to append files to the EXPORT list. This accepts wildcard
# paths relative to SRC_ROOT.
#EXPORT_APPEND += .gitconfig

# Uncomment this to recursively export the content of specified directories,
# and not the directories themselves. This accepts wildcard names for
# directories directly under SRC_ROOT. .ssh is implicitly in this list.
EXPORT_CONTENT += .config .vim .matplotlib .local

# Uncomment this to prevent some files or directories directly under SRC_ROOT
# from being exported. This accepts name wildcards but not paths.
# NO_EXPORT += .mbsyncrc

# Uncomment this to override the default EXPORT list. This should rarely be
# necessary.
#EXPORT = $(SRC_ROOT)/.bashrc

# Uncomment this to override the default explicit export list. These files get
# renamed from 'X.export' to just 'X'.
#EXPLICIT_EXPORT = $(SRC_ROOT)/.gitignore.export

# Uncomment this to install additional public keys to the authorized key list.
# Replace '+=' with '=' to completely override the default list.
#AUTHORIZED_KEYS += $(SRC_ROOT)/.ssh/id_rsa.pub

# REMOTE_NAME and REMOTE_BRANCH are used by `make update` to pull dotfile
# updates.
#REMOTE_NAME = origin
#REMOTE_BRANCH = $(shell git symbolic-ref HEAD)

# Uncomment this block to run tasks after init.
define init_append
@if [ ! -e $(HOME)/.fzf/key-bindings.bash ]; then mkdir -p $(HOME)/.fzf; wget --quiet --directory-prefix=$(HOME)/.fzf https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.bash; fi
@if [ ! -e $(HOME)/.local/bin/fzf ]; then wget https://github.com/junegunn/fzf-bin/releases/download/0.21.0/fzf-0.21.0-linux_amd64.tgz; tar xf fzf-0.21.0-linux_amd64.tgz; mv fzf $(HOME)/.local/bin; rm fzf-*.tgz; fi
endef

# Uncomment this block to run tasks after install.
# define install_append
# @vim +NeoBundleInstall +q
# endef
# @cp -i $(SRC_ROOT)/.mbsyncrc $(HOME)/.mbsyncrc
# @chmod 600 $(HOME)/.mbsyncrc
# @chmod 600 $(HOME)/.msmtprc
# endef
